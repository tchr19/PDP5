close all
clc
clear


%%

audioIn = dsp.AudioFileReader('bass_pulse_mono.wav');
audioOut = audioDeviceWriter('SampleRate',audioIn.SampleRate);
audioIn.Filename = "bass_pulse_mono.wav";
elevations = -45 + 5.625*(0:49);
load hrir_final.mat

az = arduinoObj.UserData.Data(end,1);
el = arduinoObj.UserData.Data(end,2);

f = figure(1);
a = axes('Parent',f);

f2 = figure(2);
a2 = axes('Parent',f2);

for i = 1:length(el)
    for j = 1:length(az)

        left = squeeze(hrir_l(az(j), el(i), :));
        right = squeeze(hrir_r(az(j), el(i), :));
        D = (1-sum(left))/length(left);
        left = left + D;

        D = (1-sum(right))/length(right);
        right = right + D;




        filtLP_l = dsp.FIRFilter(left');    
        filtLP_r = dsp.FIRFilter(right');

        plot(a,[left right])
        drawnow
        while ~isDone(audioIn)
            audio = audioIn();    % Read audio source file
            l = filtLP_l(audio(:,1)); 
            r = filtLP_r(audio(:,1));  % Filter the data
            w = [l(:), r(:)];
            %audioOut(w)
            audioOut(w);              % Play the filtered data
        end
        plot(a2,w);
        audioIn = dsp.AudioFileReader('bass_pulse_mono.wav');
            
    end
end

release(audioOut);
release(audioIn);

%%

serialportlist("available");


arduinoObj = serialport("COM4",9600);
configureTerminator(arduinoObj,"CR/LF");
flush(arduinoObj);
arduinoObj.UserData = struct("Data",[]);

configureCallback(arduinoObj,"terminator",@readEncoderData);

src = arduinoObj;


function readEncoderData(src, ~)
    % Read the ASCII data from the serialport object.
    data = readline(src)
    newStr = split(data,",");
    %new2 = split(newStr(2),":")
    % Convert the string data to numeric type and save it in the UserData
    % property of the serialport object.
    newStr2 = str2double(newStr);
    src.UserData.Data(end+1, :) = newStr2';

    % Update the Count value of the serialport object.
    %src.UserData.Count = src.UserData.Count + 1;

    % If 1001 data points have been collected from the Arduino, switch off the
    % callbacks and plot the data.
    
    %if src.UserData.Count > 1001
        %configureCallback(src, "off");
        %data
        %plot(src.UserData.Data(2:end));
    %end
end
